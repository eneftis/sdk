/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { ClearingHouseViewer, ClearingHouseViewerInterface } from "../ClearingHouseViewer";

const _abi = [
    {
        inputs: [
            {
                internalType: "contract ClearingHouse",
                name: "_clearingHouse",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "clearingHouse",
        outputs: [
            {
                internalType: "contract ClearingHouse",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IAmm",
                name: "_amm",
                type: "address",
            },
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
        ],
        name: "getFreeCollateral",
        outputs: [
            {
                components: [
                    {
                        internalType: "int256",
                        name: "d",
                        type: "int256",
                    },
                ],
                internalType: "struct SignedDecimal.signedDecimal",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IAmm",
                name: "_amm",
                type: "address",
            },
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
        ],
        name: "getMarginRatio",
        outputs: [
            {
                components: [
                    {
                        internalType: "int256",
                        name: "d",
                        type: "int256",
                    },
                ],
                internalType: "struct SignedDecimal.signedDecimal",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "_quoteToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
        ],
        name: "getPersonalBalanceWithFundingPayment",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "d",
                        type: "uint256",
                    },
                ],
                internalType: "struct Decimal.decimal",
                name: "margin",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IAmm",
                name: "_amm",
                type: "address",
            },
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
        ],
        name: "getPersonalPositionWithFundingPayment",
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "int256",
                                name: "d",
                                type: "int256",
                            },
                        ],
                        internalType: "struct SignedDecimal.signedDecimal",
                        name: "size",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "d",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct Decimal.decimal",
                        name: "margin",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "d",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct Decimal.decimal",
                        name: "openNotional",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "int256",
                                name: "d",
                                type: "int256",
                            },
                        ],
                        internalType: "struct SignedDecimal.signedDecimal",
                        name: "lastUpdatedCumulativePremiumFractionLong",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                internalType: "int256",
                                name: "d",
                                type: "int256",
                            },
                        ],
                        internalType: "struct SignedDecimal.signedDecimal",
                        name: "lastUpdatedCumulativePremiumFractionShort",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "blockNumber",
                        type: "uint256",
                    },
                ],
                internalType: "struct ClearingHouse.Position",
                name: "position",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IAmm",
                name: "_amm",
                type: "address",
            },
            {
                internalType: "address",
                name: "_trader",
                type: "address",
            },
        ],
        name: "getUnrealizedPnl",
        outputs: [
            {
                components: [
                    {
                        internalType: "int256",
                        name: "d",
                        type: "int256",
                    },
                ],
                internalType: "struct SignedDecimal.signedDecimal",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
] as const;

const _bytecode =
    "0x608060405234801561001057600080fd5b5060405161132d38038061132d83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b61129a806100936000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630acdddfb146100675780630af968001461008e57806316f6c558146100ae57806333d3bd3014610112578063bafe871c14610125578063ea0a45f914610138575b600080fd5b61007a610075366004610bcc565b61014b565b604051905181526020015b60405180910390f35b6000546100a1906001600160a01b031681565b6040516100859190610c05565b6100c16100bc366004610bcc565b6101d3565b6040516100859190600060c0820190508251518252602083015151602083015260408301515160408301526060830151516060830152608083015151608083015260a083015160a083015292915050565b61007a610120366004610bcc565b610322565b61007a610133366004610bcc565b61056d565b61007a610146366004610bcc565b61074c565b610153610b4d565b60008054604051638bedf3bb60e01b81526001600160a01b0390911690638bedf3bb9061018890879087908690600401610c19565b6040805180830381865afa1580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c89190610ce4565b925050505b92915050565b6101db610b60565b600054604051630b33dc1960e41b81526001600160a01b039091169063b33dc1909061020d9086908690600401610d19565b60c060405180830381865afa15801561022a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061024e9190610d33565b60008054604051636891397b60e01b8152929350909182916001600160a01b031690636891397b90610284908890600401610c05565b6040805180830381865afa1580156102a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c49190610ce4565b9150915060006102eb6102d88585856107ce565b6102e58660200151610850565b906108bd565b905060006102f7825190565b121561030a576103056108e3565b610313565b610313816108fe565b60208501525091949350505050565b61032a610b4d565b600061033684846101d3565b60008054604051638bedf3bb60e01b8152929350909182916001600160a01b031690638bedf3bb9061037090899089908690600401610c19565b6040805180830381865afa15801561038c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b09190610ce4565b60008054604051638bedf3bb60e01b81529395509193509182916001600160a01b031690638bedf3bb906103ec908b908b908690600401610c19565b6040805180830381865afa158015610408573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042c9190610ce4565b91509150610438610b4d565b610440610b4d565b8251855113610450578486610453565b82845b6020890151919350915060009061046b908490610934565b905060008061048e61048a8b60200151856109a490919063ffffffff16565b5190565b1361049957816104a6565b6104a68960200151610850565b905060008c6001600160a01b031663b13c86a36040518163ffffffff1660e01b815260040160a060405180830381865afa1580156104e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050c9190610dd2565b6020015190506000806105218c600001515190565b1361053e576105398261053387610850565b90610a0a565b61054f565b61054f826105338d60400151610850565b905061055b8382610a75565b9e9d5050505050505050505050505050565b610575610b4d565b60008060009054906101000a90046001600160a01b03166001600160a01b031663b79023036040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ed9190610e64565b90506000816001600160a01b031663b7538c626040518163ffffffff1660e01b8152600401600060405180830381865afa15801561062f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106579190810190610e81565b905060005b815181101561074357856001600160a01b031682828151811061068157610681610f32565b60200260200101516001600160a01b031663fdf262b76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea9190610e64565b6001600160a01b03160361073157600061071d83838151811061070f5761070f610f32565b6020026020010151876101d3565b60200151905061072d8582610a92565b9450505b8061073b81610f5e565b91505061065c565b50505092915050565b610754610b4d565b60005460405163ea0a45f960e01b81526001600160a01b039091169063ea0a45f9906107869086908690600401610d19565b602060405180830381865afa1580156107a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c79190610f77565b9392505050565b6107d6610b4d565b8351516000036107ef576107e86108e3565b90506107c7565b8351516000121561082b576107e8600019610825866000015161081f886060015188610a7590919063ffffffff16565b90610aaf565b90610acc565b6107e8600019610825866000015161081f886080015187610a7590919063ffffffff16565b610858610b4d565b8180600001516001600160ff1b03101560405180606001604052806033815260200161123260339139906108a85760405162461bcd60e51b815260040161089f9190610f93565b60405180910390fd5b50506040805160208101909152915182525090565b6108c5610b4d565b6108cd610b4d565b825184516108da91610ae9565b81529392505050565b6108eb610b4d565b5060408051602081019091526000815290565b610906610b4d565b61090e610b4d565b82516000131561092c578251610925906000610fe8565b81526101cd565b915182525090565b61093c610b4d565b8180600001516001600160ff1b03101560405180606001604052806033815260200161123260339139906109835760405162461bcd60e51b815260040161089f9190610f93565b5061098c610b4d565b8351855161099a9190611027565b8152949350505050565b6109ac610b4d565b8180600001516001600160ff1b03101560405180606001604052806033815260200161123260339139906109f35760405162461bcd60e51b815260040161089f9190610f93565b506109fc610b4d565b8351855161099a9190610fe8565b610a12610b4d565b8180600001516001600160ff1b0310156040518060600160405280603381526020016112326033913990610a595760405162461bcd60e51b815260040161089f9190610f93565b50610a62610b4d565b6101c8610a6e85610850565b8690610aaf565b610a7d610b4d565b610a85610b4d565b825184516108da91610af5565b610a9a610b4d565b610aa2610b4d565b825184516108da91610b01565b610ab7610b4d565b610abf610b4d565b825184516108da91610b0d565b610ad4610b4d565b610adc610b4d565b83516108da908490611068565b60006107c78284611027565b60006107c78284610fe8565b60006107c782846110ed565b60006107c7838360126000610b2182610b3d565b610b2b8486611068565b610b359190611105565b949350505050565b60006101cd60ff8316600a611225565b6040518060200160405280600081525090565b6040518060c00160405280610b73610b4d565b8152602001610b80610b4d565b8152602001610b8d610b4d565b8152602001610b9a610b4d565b8152602001610ba7610b4d565b8152602001600081525090565b6001600160a01b0381168114610bc957600080fd5b50565b60008060408385031215610bdf57600080fd5b8235610bea81610bb4565b91506020830135610bfa81610bb4565b809150509250929050565b6001600160a01b0391909116815260200190565b6001600160a01b038481168252831660208201526060810160028310610c4f57634e487b7160e01b600052602160045260246000fd5b826040830152949350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715610c9b57610c9b610c5d565b604052919050565b600060208284031215610cb557600080fd5b604051602081016001600160401b0381118282101715610cd757610cd7610c5d565b6040529151825250919050565b60008060408385031215610cf757600080fd5b610d018484610ca3565b9150610d108460208501610ca3565b90509250929050565b6001600160a01b0392831681529116602082015260400190565b600060c08284031215610d4557600080fd5b60405160c081016001600160401b0381118282101715610d6757610d67610c5d565b604052610d748484610ca3565b8152610d838460208501610ca3565b6020820152610d958460408501610ca3565b6040820152610da78460608501610ca3565b6060820152610db98460808501610ca3565b608082015260a083015160a08201528091505092915050565b600060a08284031215610de457600080fd5b60405160a081016001600160401b0381118282101715610e0657610e06610c5d565b604052610e138484610ca3565b8152610e228460208501610ca3565b6020820152610e348460408501610ca3565b6040820152610e468460608501610ca3565b6060820152610e588460808501610ca3565b60808201529392505050565b600060208284031215610e7657600080fd5b81516107c781610bb4565b60006020808385031215610e9457600080fd5b82516001600160401b0380821115610eab57600080fd5b818501915085601f830112610ebf57600080fd5b815181811115610ed157610ed1610c5d565b8060051b9150610ee2848301610c73565b8181529183018401918481019088841115610efc57600080fd5b938501935b83851015610f265784519250610f1683610bb4565b8282529385019390850190610f01565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610f7057610f70610f48565b5060010190565b600060208284031215610f8957600080fd5b6107c78383610ca3565b600060208083528351808285015260005b81811015610fc057858101830151858201604001528201610fa4565b81811115610fd2576000604083870101525b50601f01601f1916929092016040019392505050565b60008083128015600160ff1b85018412161561100657611006610f48565b6001600160ff1b038401831381161561102157611021610f48565b50500390565b600080821280156001600160ff1b038490038513161561104957611049610f48565b600160ff1b839003841281161561106257611062610f48565b50500190565b60006001600160ff1b038184138284138082168684048611161561108e5761108e610f48565b600160ff1b60008712828116878305891216156110ad576110ad610f48565b600087129250878205871284841616156110c9576110c9610f48565b878505871281841616156110df576110df610f48565b505050929093029392505050565b6000821982111561110057611100610f48565b500190565b60008261112257634e487b7160e01b600052601260045260246000fd5b600160ff1b82146000198414161561113c5761113c610f48565b500590565b600181815b8085111561117c57816000190482111561116257611162610f48565b8085161561116f57918102915b93841c9390800290611146565b509250929050565b600082611193575060016101cd565b816111a0575060006101cd565b81600181146111b657600281146111c0576111dc565b60019150506101cd565b60ff8411156111d1576111d1610f48565b50506001821b6101cd565b5060208310610133831016604e8410600b84101617156111ff575081810a6101cd565b6112098383611141565b806000190482111561121d5761121d610f48565b029392505050565b60006107c7838361118456fe4d69786564446563696d616c3a2075696e742076616c756520697320626967676572207468616e205f494e543235365f4d4158a264697066735822122020c231f83529fc4ab047b372ac81925ee50cb0868581af59fdaea592f9d5e36a64736f6c634300080d0033";

type ClearingHouseViewerConstructorParams =
    | [signer?: Signer]
    | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
    xs: ClearingHouseViewerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ClearingHouseViewer__factory extends ContractFactory {
    constructor(...args: ClearingHouseViewerConstructorParams) {
        if (isSuperArgs(args)) {
            super(...args);
        } else {
            super(_abi, _bytecode, args[0]);
        }
    }

    override deploy(
        _clearingHouse: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ClearingHouseViewer> {
        return super.deploy(_clearingHouse, overrides || {}) as Promise<ClearingHouseViewer>;
    }
    override getDeployTransaction(
        _clearingHouse: PromiseOrValue<string>,
        overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): TransactionRequest {
        return super.getDeployTransaction(_clearingHouse, overrides || {});
    }
    override attach(address: string): ClearingHouseViewer {
        return super.attach(address) as ClearingHouseViewer;
    }
    override connect(signer: Signer): ClearingHouseViewer__factory {
        return super.connect(signer) as ClearingHouseViewer__factory;
    }

    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): ClearingHouseViewerInterface {
        return new utils.Interface(_abi) as ClearingHouseViewerInterface;
    }
    static connect(address: string, signerOrProvider: Signer | Provider): ClearingHouseViewer {
        return new Contract(address, _abi, signerOrProvider) as ClearingHouseViewer;
    }
}
